Total Lines: 109
Total Chars: 2301

Total Words:
[keyword]:	37
[identifier]:	148
[string]:	4
[number]:	3

Tokens:
<keyword                   	typedef>
<keyword                   	struct>
<identifier                   	student>
<punctuator                   	{>
<keyword                   	int>
<identifier                   	data>
<punctuator                   	;>
<keyword                   	struct>
<identifier                   	student>
<punctuator                   	*>
<identifier                   	NextPtr>
<punctuator                   	;>
<punctuator                   	}>
<identifier                   	STU>
<punctuator                   	;>
<keyword                   	typedef>
<identifier                   	STU>
<punctuator                   	*>
<identifier                   	StuPtr>
<punctuator                   	;>
<identifier                   	StuPtr>
<identifier                   	CreateFIFOList>
<punctuator                   	(>
<punctuator                   	)>
<punctuator                   	;>
<keyword                   	int>
<identifier                   	MaxNum>
<punctuator                   	(>
<identifier                   	StuPtr>
<identifier                   	headPtr>
<punctuator                   	)>
<punctuator                   	;>
<keyword                   	int>
<identifier                   	MinNum>
<punctuator                   	(>
<identifier                   	StuPtr>
<identifier                   	headPtr>
<punctuator                   	)>
<punctuator                   	;>
<keyword                   	int>
<identifier                   	SumNum>
<punctuator                   	(>
<identifier                   	StuPtr>
<identifier                   	headPtr>
<punctuator                   	)>
<punctuator                   	;>
<keyword                   	void>
<identifier                   	DestroyList>
<punctuator                   	(>
<identifier                   	StuPtr>
<identifier                   	headPtr>
<punctuator                   	)>
<punctuator                   	;>
<keyword                   	int>
<identifier                   	main>
<punctuator                   	(>
<punctuator                   	)>
<punctuator                   	{>
<keyword                   	int>
<identifier                   	max>
<punctuator                   	,>
<identifier                   	min>
<punctuator                   	,>
<identifier                   	sum>
<punctuator                   	;>
<identifier                   	printf>
<punctuator                   	(>
<string                   	"Please input a series of integers:">
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	StuPtr>
<identifier                   	headPtr>
<punctuator                   	=>
<identifier                   	CreateFIFOList>
<punctuator                   	(>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	max>
<punctuator                   	=>
<identifier                   	MaxNum>
<punctuator                   	(>
<identifier                   	headPtr>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	min>
<punctuator                   	=>
<identifier                   	MinNum>
<punctuator                   	(>
<identifier                   	headPtr>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	sum>
<punctuator                   	=>
<identifier                   	SumNum>
<punctuator                   	(>
<identifier                   	headPtr>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	printf>
<punctuator                   	(>
<string                   	"The maximum,minmum and the total are:%d %d %d\n">
<punctuator                   	,>
<identifier                   	max>
<punctuator                   	,>
<identifier                   	min>
<punctuator                   	,>
<identifier                   	sum>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	DestroyList>
<punctuator                   	(>
<identifier                   	headPtr>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	headPtr>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	;>
<keyword                   	return>
<number                   	0>
<punctuator                   	;>
<punctuator                   	}>
<identifier                   	StuPtr>
<identifier                   	CreateFIFOList>
<punctuator                   	(>
<punctuator                   	)>
<punctuator                   	{>
<keyword                   	int>
<identifier                   	num>
<punctuator                   	;>
<identifier                   	StuPtr>
<identifier                   	headPtr>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	,>
<identifier                   	currentPtr>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	,>
<identifier                   	lastPtr>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	;>
<identifier                   	scanf>
<punctuator                   	(>
<string                   	"%d">
<punctuator                   	,>
<punctuator                   	&>
<identifier                   	num>
<punctuator                   	)>
<punctuator                   	;>
<keyword                   	while>
<punctuator                   	(>
<identifier                   	num>
<punctuator                   	!=>
<punctuator                   	->
<number                   	1>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	currentPtr>
<punctuator                   	=>
<identifier                   	malloc>
<punctuator                   	(>
<keyword                   	sizeof>
<punctuator                   	(>
<identifier                   	STU>
<punctuator                   	)>
<punctuator                   	)>
<punctuator                   	;>
<keyword                   	if>
<punctuator                   	(>
<identifier                   	currentPtr>
<punctuator                   	!=>
<identifier                   	NULL>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	currentPtr>
<punctuator                   	->>
<identifier                   	data>
<punctuator                   	=>
<identifier                   	num>
<punctuator                   	;>
<keyword                   	if>
<punctuator                   	(>
<identifier                   	headPtr>
<punctuator                   	==>
<identifier                   	NULL>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	headPtr>
<punctuator                   	=>
<identifier                   	currentPtr>
<punctuator                   	;>
<identifier                   	lastPtr>
<punctuator                   	=>
<identifier                   	currentPtr>
<punctuator                   	;>
<punctuator                   	}>
<keyword                   	else>
<punctuator                   	{>
<identifier                   	lastPtr>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	=>
<identifier                   	currentPtr>
<punctuator                   	;>
<identifier                   	lastPtr>
<punctuator                   	=>
<identifier                   	currentPtr>
<punctuator                   	;>
<punctuator                   	}>
<punctuator                   	}>
<identifier                   	scanf>
<punctuator                   	(>
<string                   	"%d">
<punctuator                   	,>
<punctuator                   	&>
<identifier                   	num>
<punctuator                   	)>
<punctuator                   	;>
<punctuator                   	}>
<identifier                   	lastPtr>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	;>
<keyword                   	return>
<identifier                   	headPtr>
<punctuator                   	;>
<punctuator                   	}>
<keyword                   	int>
<identifier                   	MaxNum>
<punctuator                   	(>
<identifier                   	StuPtr>
<identifier                   	headPtr>
<punctuator                   	)>
<punctuator                   	{>
<keyword                   	int>
<identifier                   	n>
<punctuator                   	;>
<keyword                   	int>
<identifier                   	max>
<punctuator                   	=>
<identifier                   	headPtr>
<punctuator                   	->>
<identifier                   	data>
<punctuator                   	;>
<keyword                   	while>
<punctuator                   	(>
<identifier                   	headPtr>
<punctuator                   	!=>
<identifier                   	NULL>
<punctuator                   	)>
<punctuator                   	{>
<keyword                   	if>
<punctuator                   	(>
<identifier                   	headPtr>
<punctuator                   	->>
<identifier                   	data>
<punctuator                   	>>
<identifier                   	max>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	max>
<punctuator                   	=>
<identifier                   	headPtr>
<punctuator                   	->>
<identifier                   	data>
<punctuator                   	;>
<punctuator                   	}>
<identifier                   	headPtr>
<punctuator                   	=>
<identifier                   	headPtr>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	;>
<punctuator                   	}>
<keyword                   	return>
<identifier                   	max>
<punctuator                   	;>
<punctuator                   	}>
<keyword                   	int>
<identifier                   	MinNum>
<punctuator                   	(>
<identifier                   	StuPtr>
<identifier                   	headPtr>
<punctuator                   	)>
<punctuator                   	{>
<keyword                   	int>
<identifier                   	n>
<punctuator                   	;>
<keyword                   	int>
<identifier                   	min>
<punctuator                   	=>
<identifier                   	headPtr>
<punctuator                   	->>
<identifier                   	data>
<punctuator                   	;>
<keyword                   	while>
<punctuator                   	(>
<identifier                   	headPtr>
<punctuator                   	!=>
<identifier                   	NULL>
<punctuator                   	)>
<punctuator                   	{>
<keyword                   	if>
<punctuator                   	(>
<identifier                   	headPtr>
<punctuator                   	->>
<identifier                   	data>
<punctuator                   	<>
<identifier                   	min>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	min>
<punctuator                   	=>
<identifier                   	headPtr>
<punctuator                   	->>
<identifier                   	data>
<punctuator                   	;>
<punctuator                   	}>
<identifier                   	headPtr>
<punctuator                   	=>
<identifier                   	headPtr>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	;>
<punctuator                   	}>
<keyword                   	return>
<identifier                   	min>
<punctuator                   	;>
<punctuator                   	}>
<keyword                   	int>
<identifier                   	SumNum>
<punctuator                   	(>
<identifier                   	StuPtr>
<identifier                   	headPtr>
<punctuator                   	)>
<punctuator                   	{>
<keyword                   	int>
<identifier                   	sum>
<punctuator                   	=>
<number                   	0>
<punctuator                   	;>
<keyword                   	while>
<punctuator                   	(>
<identifier                   	headPtr>
<punctuator                   	!=>
<identifier                   	NULL>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	sum>
<punctuator                   	+=>
<identifier                   	headPtr>
<punctuator                   	->>
<identifier                   	data>
<punctuator                   	;>
<identifier                   	headPtr>
<punctuator                   	=>
<identifier                   	headPtr>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	;>
<punctuator                   	}>
<keyword                   	return>
<identifier                   	sum>
<punctuator                   	;>
<punctuator                   	}>
<keyword                   	void>
<identifier                   	DestroyList>
<punctuator                   	(>
<identifier                   	StuPtr>
<identifier                   	headPtr>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	StuPtr>
<identifier                   	tempPtr>
<punctuator                   	;>
<keyword                   	while>
<punctuator                   	(>
<identifier                   	headPtr>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	tempPtr>
<punctuator                   	=>
<identifier                   	headPtr>
<punctuator                   	;>
<identifier                   	headPtr>
<punctuator                   	=>
<identifier                   	headPtr>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	;>
<identifier                   	free>
<punctuator                   	(>
<identifier                   	tempPtr>
<punctuator                   	)>
<punctuator                   	;>
<punctuator                   	}>
<punctuator                   	}>
