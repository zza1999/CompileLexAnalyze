Total Lines: 150
Total Chars: 3911

Total Words:
[keyword]:	37
[identifier]:	274
[number]:	13
[string]:	15

Tokens:
<keyword                   	typedef>
<keyword                   	struct>
<identifier                   	charlist>
<punctuator                   	{>
<keyword                   	char>
<identifier                   	ch>
<punctuator                   	[>
<number                   	5>
<punctuator                   	]>
<punctuator                   	;>
<keyword                   	struct>
<identifier                   	charlist>
<punctuator                   	*>
<identifier                   	NextPtr>
<punctuator                   	;>
<punctuator                   	}>
<identifier                   	LIST>
<punctuator                   	;>
<keyword                   	typedef>
<identifier                   	LIST>
<punctuator                   	*>
<identifier                   	LISTPtr>
<punctuator                   	;>
<identifier                   	LISTPtr>
<identifier                   	CreateList>
<punctuator                   	(>
<punctuator                   	)>
<punctuator                   	;>
<keyword                   	void>
<identifier                   	PrintList>
<punctuator                   	(>
<identifier                   	LISTPtr>
<identifier                   	headPtr>
<punctuator                   	,>
<keyword                   	char>
<identifier                   	ch>
<punctuator                   	)>
<punctuator                   	;>
<keyword                   	void>
<identifier                   	DestroyList>
<punctuator                   	(>
<identifier                   	LISTPtr>
<identifier                   	headPtr>
<punctuator                   	)>
<punctuator                   	;>
<keyword                   	void>
<identifier                   	DevideList>
<punctuator                   	(>
<identifier                   	LISTPtr>
<identifier                   	headPtr0>
<punctuator                   	,>
<identifier                   	LISTPtr>
<identifier                   	headPtr1>
<punctuator                   	,>
<identifier                   	LISTPtr>
<identifier                   	headPtr2>
<punctuator                   	,>
<identifier                   	LISTPtr>
<identifier                   	headPtr3>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	LISTPtr>
<identifier                   	BubbleSortList>
<punctuator                   	(>
<identifier                   	LISTPtr>
<identifier                   	headPtr>
<punctuator                   	)>
<punctuator                   	;>
<keyword                   	int>
<identifier                   	main>
<punctuator                   	(>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	LISTPtr>
<identifier                   	headPtr0>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	,>
<identifier                   	headPtr1>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	,>
<identifier                   	headPtr2>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	,>
<identifier                   	headPtr3>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	;>
<identifier                   	printf>
<punctuator                   	(>
<string                   	"Please input a list:">
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	headPtr0>
<punctuator                   	=>
<identifier                   	CreateList>
<punctuator                   	(>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	headPtr1>
<punctuator                   	=>
<identifier                   	malloc>
<punctuator                   	(>
<keyword                   	sizeof>
<punctuator                   	(>
<identifier                   	LIST>
<punctuator                   	)>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	headPtr2>
<punctuator                   	=>
<identifier                   	malloc>
<punctuator                   	(>
<keyword                   	sizeof>
<punctuator                   	(>
<identifier                   	LIST>
<punctuator                   	)>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	headPtr3>
<punctuator                   	=>
<identifier                   	malloc>
<punctuator                   	(>
<keyword                   	sizeof>
<punctuator                   	(>
<identifier                   	LIST>
<punctuator                   	)>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	DevideList>
<punctuator                   	(>
<identifier                   	headPtr0>
<punctuator                   	,>
<identifier                   	headPtr1>
<punctuator                   	,>
<identifier                   	headPtr2>
<punctuator                   	,>
<identifier                   	headPtr3>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	headPtr1>
<punctuator                   	=>
<identifier                   	BubbleSortList>
<punctuator                   	(>
<identifier                   	headPtr1>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	headPtr2>
<punctuator                   	=>
<identifier                   	BubbleSortList>
<punctuator                   	(>
<identifier                   	headPtr2>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	headPtr3>
<punctuator                   	=>
<identifier                   	BubbleSortList>
<punctuator                   	(>
<identifier                   	headPtr3>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	PrintList>
<punctuator                   	(>
<identifier                   	headPtr1>
<punctuator                   	,>
<number                   	'A'>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	PrintList>
<punctuator                   	(>
<identifier                   	headPtr2>
<punctuator                   	,>
<number                   	'B'>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	PrintList>
<punctuator                   	(>
<identifier                   	headPtr3>
<punctuator                   	,>
<number                   	'C'>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	DestroyList>
<punctuator                   	(>
<identifier                   	headPtr1>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	headPtr1>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	;>
<identifier                   	DestroyList>
<punctuator                   	(>
<identifier                   	headPtr2>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	headPtr2>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	;>
<identifier                   	DestroyList>
<punctuator                   	(>
<identifier                   	headPtr3>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	headPtr3>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	;>
<punctuator                   	}>
<keyword                   	void>
<identifier                   	DevideList>
<punctuator                   	(>
<identifier                   	LISTPtr>
<identifier                   	headPtr0>
<punctuator                   	,>
<identifier                   	LISTPtr>
<identifier                   	headPtr1>
<punctuator                   	,>
<identifier                   	LISTPtr>
<identifier                   	headPtr2>
<punctuator                   	,>
<identifier                   	LISTPtr>
<identifier                   	headPtr3>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	LISTPtr>
<identifier                   	currentPtr0>
<punctuator                   	;>
<identifier                   	currentPtr0>
<punctuator                   	=>
<identifier                   	headPtr0>
<punctuator                   	;>
<keyword                   	while>
<punctuator                   	(>
<identifier                   	currentPtr0>
<punctuator                   	!=>
<identifier                   	NULL>
<punctuator                   	)>
<punctuator                   	{>
<keyword                   	if>
<punctuator                   	(>
<identifier                   	strcmp>
<punctuator                   	(>
<identifier                   	currentPtr0>
<punctuator                   	->>
<identifier                   	ch>
<punctuator                   	,>
<string                   	"A">
<punctuator                   	)>
<punctuator                   	>=>
<number                   	0>
<punctuator                   	&&>
<identifier                   	strcmp>
<punctuator                   	(>
<identifier                   	currentPtr0>
<punctuator                   	->>
<identifier                   	ch>
<punctuator                   	,>
<string                   	"Z">
<punctuator                   	)>
<punctuator                   	<=>
<number                   	0>
<punctuator                   	||>
<identifier                   	strcmp>
<punctuator                   	(>
<identifier                   	currentPtr0>
<punctuator                   	->>
<identifier                   	ch>
<punctuator                   	,>
<string                   	"a">
<punctuator                   	)>
<punctuator                   	>=>
<number                   	0>
<punctuator                   	&&>
<identifier                   	strcmp>
<punctuator                   	(>
<identifier                   	currentPtr0>
<punctuator                   	->>
<identifier                   	ch>
<punctuator                   	,>
<string                   	"z">
<punctuator                   	)>
<punctuator                   	<=>
<number                   	0>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	headPtr1>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	=>
<identifier                   	currentPtr0>
<punctuator                   	;>
<identifier                   	headPtr1>
<punctuator                   	=>
<identifier                   	currentPtr0>
<punctuator                   	;>
<punctuator                   	}>
<keyword                   	else>
<keyword                   	if>
<punctuator                   	(>
<identifier                   	strcmp>
<punctuator                   	(>
<identifier                   	currentPtr0>
<punctuator                   	->>
<identifier                   	ch>
<punctuator                   	,>
<string                   	"0">
<punctuator                   	)>
<punctuator                   	>=>
<number                   	0>
<punctuator                   	&&>
<identifier                   	strcmp>
<punctuator                   	(>
<identifier                   	currentPtr0>
<punctuator                   	->>
<identifier                   	ch>
<punctuator                   	,>
<string                   	"9">
<punctuator                   	)>
<punctuator                   	<=>
<number                   	0>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	headPtr2>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	=>
<identifier                   	currentPtr0>
<punctuator                   	;>
<identifier                   	headPtr2>
<punctuator                   	=>
<identifier                   	currentPtr0>
<punctuator                   	;>
<punctuator                   	}>
<keyword                   	else>
<punctuator                   	{>
<identifier                   	headPtr3>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	=>
<identifier                   	currentPtr0>
<punctuator                   	;>
<identifier                   	headPtr3>
<punctuator                   	=>
<identifier                   	currentPtr0>
<punctuator                   	;>
<punctuator                   	}>
<identifier                   	currentPtr0>
<punctuator                   	=>
<identifier                   	currentPtr0>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	;>
<punctuator                   	}>
<identifier                   	headPtr1>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	;>
<identifier                   	headPtr2>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	;>
<identifier                   	headPtr3>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	;>
<punctuator                   	}>
<identifier                   	LISTPtr>
<identifier                   	CreateList>
<punctuator                   	(>
<punctuator                   	)>
<punctuator                   	{>
<keyword                   	char>
<identifier                   	ch>
<punctuator                   	[>
<number                   	5>
<punctuator                   	]>
<punctuator                   	;>
<identifier                   	LISTPtr>
<identifier                   	headPtr>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	,>
<identifier                   	currentPtr>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	,>
<identifier                   	lastPtr>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	;>
<identifier                   	printf>
<punctuator                   	(>
<string                   	"PLease input a list:">
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	scanf>
<punctuator                   	(>
<string                   	"%s">
<punctuator                   	,>
<punctuator                   	&>
<identifier                   	ch>
<punctuator                   	)>
<punctuator                   	;>
<keyword                   	while>
<punctuator                   	(>
<identifier                   	strcmp>
<punctuator                   	(>
<identifier                   	ch>
<punctuator                   	,>
<string                   	"-1">
<punctuator                   	)>
<punctuator                   	!=>
<number                   	0>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	currentPtr>
<punctuator                   	=>
<identifier                   	malloc>
<punctuator                   	(>
<keyword                   	sizeof>
<punctuator                   	(>
<identifier                   	LIST>
<punctuator                   	)>
<punctuator                   	)>
<punctuator                   	;>
<keyword                   	if>
<punctuator                   	(>
<identifier                   	currentPtr>
<punctuator                   	!=>
<identifier                   	NULL>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	strcpy>
<punctuator                   	(>
<identifier                   	currentPtr>
<punctuator                   	->>
<identifier                   	ch>
<punctuator                   	,>
<identifier                   	ch>
<punctuator                   	)>
<punctuator                   	;>
<keyword                   	if>
<punctuator                   	(>
<identifier                   	headPtr>
<punctuator                   	==>
<identifier                   	NULL>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	headPtr>
<punctuator                   	=>
<identifier                   	currentPtr>
<punctuator                   	;>
<identifier                   	lastPtr>
<punctuator                   	=>
<identifier                   	currentPtr>
<punctuator                   	;>
<punctuator                   	}>
<keyword                   	else>
<punctuator                   	{>
<identifier                   	lastPtr>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	=>
<identifier                   	currentPtr>
<punctuator                   	;>
<identifier                   	lastPtr>
<punctuator                   	=>
<identifier                   	currentPtr>
<punctuator                   	;>
<punctuator                   	}>
<punctuator                   	}>
<identifier                   	scanf>
<punctuator                   	(>
<string                   	"%s">
<punctuator                   	,>
<punctuator                   	&>
<identifier                   	ch>
<punctuator                   	)>
<punctuator                   	;>
<punctuator                   	}>
<identifier                   	lastPtr>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	;>
<keyword                   	return>
<identifier                   	headPtr>
<punctuator                   	;>
<punctuator                   	}>
<identifier                   	LISTPtr>
<identifier                   	BubbleSortList>
<punctuator                   	(>
<identifier                   	LISTPtr>
<identifier                   	headPtr>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	LISTPtr>
<identifier                   	IPtr>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	;>
<identifier                   	LISTPtr>
<identifier                   	JPtr>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	;>
<identifier                   	LISTPtr>
<identifier                   	tempPtr>
<punctuator                   	=>
<identifier                   	NULL>
<punctuator                   	;>
<identifier                   	LIST>
<identifier                   	temp>
<punctuator                   	;>
<keyword                   	for>
<punctuator                   	(>
<identifier                   	IPtr>
<punctuator                   	=>
<identifier                   	headPtr>
<punctuator                   	;>
<identifier                   	IPtr>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	!=>
<identifier                   	NULL>
<punctuator                   	;>
<identifier                   	IPtr>
<punctuator                   	=>
<identifier                   	IPtr>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	)>
<punctuator                   	{>
<keyword                   	for>
<punctuator                   	(>
<identifier                   	JPtr>
<punctuator                   	=>
<identifier                   	IPtr>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	;>
<identifier                   	JPtr>
<punctuator                   	!=>
<identifier                   	NULL>
<punctuator                   	;>
<identifier                   	JPtr>
<punctuator                   	=>
<identifier                   	JPtr>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	)>
<punctuator                   	{>
<keyword                   	if>
<punctuator                   	(>
<identifier                   	strcmp>
<punctuator                   	(>
<identifier                   	IPtr>
<punctuator                   	->>
<identifier                   	ch>
<punctuator                   	,>
<identifier                   	JPtr>
<punctuator                   	->>
<identifier                   	ch>
<punctuator                   	)>
<punctuator                   	>>
<number                   	0>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	temp>
<punctuator                   	=>
<punctuator                   	*>
<identifier                   	IPtr>
<punctuator                   	;>
<punctuator                   	*>
<identifier                   	IPtr>
<punctuator                   	=>
<punctuator                   	*>
<identifier                   	JPtr>
<punctuator                   	;>
<punctuator                   	*>
<identifier                   	JPtr>
<punctuator                   	=>
<identifier                   	temp>
<punctuator                   	;>
<identifier                   	tempPtr>
<punctuator                   	=>
<identifier                   	IPtr>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	;>
<identifier                   	IPtr>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	=>
<identifier                   	JPtr>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	;>
<identifier                   	JPtr>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	=>
<identifier                   	tempPtr>
<punctuator                   	;>
<punctuator                   	}>
<punctuator                   	}>
<punctuator                   	}>
<keyword                   	return>
<identifier                   	headPtr>
<punctuator                   	;>
<punctuator                   	}>
<keyword                   	void>
<identifier                   	PrintList>
<punctuator                   	(>
<identifier                   	LISTPtr>
<identifier                   	headPtr>
<punctuator                   	,>
<keyword                   	char>
<identifier                   	ch>
<punctuator                   	)>
<punctuator                   	{>
<keyword                   	if>
<punctuator                   	(>
<identifier                   	headPtr>
<punctuator                   	==>
<identifier                   	NULL>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	printf>
<punctuator                   	(>
<string                   	"There is no item in %c list.">
<punctuator                   	,>
<identifier                   	ch>
<punctuator                   	)>
<punctuator                   	;>
<punctuator                   	}>
<keyword                   	else>
<punctuator                   	{>
<identifier                   	printf>
<punctuator                   	(>
<string                   	"The list%c is:">
<punctuator                   	,>
<identifier                   	ch>
<punctuator                   	)>
<punctuator                   	;>
<keyword                   	while>
<punctuator                   	(>
<identifier                   	headPtr>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	!=>
<identifier                   	NULL>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	printf>
<punctuator                   	(>
<string                   	"%s ">
<punctuator                   	,>
<identifier                   	headPtr>
<punctuator                   	->>
<identifier                   	ch>
<punctuator                   	)>
<punctuator                   	;>
<identifier                   	headPtr>
<punctuator                   	=>
<identifier                   	headPtr>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	;>
<punctuator                   	}>
<identifier                   	printf>
<punctuator                   	(>
<string                   	"%s\n">
<punctuator                   	,>
<identifier                   	headPtr>
<punctuator                   	->>
<identifier                   	ch>
<punctuator                   	)>
<punctuator                   	;>
<punctuator                   	}>
<punctuator                   	}>
<keyword                   	void>
<identifier                   	DestroyList>
<punctuator                   	(>
<identifier                   	LISTPtr>
<identifier                   	headPtr>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	LISTPtr>
<identifier                   	tempPtr>
<punctuator                   	;>
<keyword                   	while>
<punctuator                   	(>
<identifier                   	headPtr>
<punctuator                   	!=>
<identifier                   	NULL>
<punctuator                   	)>
<punctuator                   	{>
<identifier                   	tempPtr>
<punctuator                   	=>
<identifier                   	headPtr>
<punctuator                   	;>
<identifier                   	headPtr>
<punctuator                   	=>
<identifier                   	headPtr>
<punctuator                   	->>
<identifier                   	NextPtr>
<punctuator                   	;>
<identifier                   	free>
<punctuator                   	(>
<identifier                   	tempPtr>
<punctuator                   	)>
<punctuator                   	;>
<punctuator                   	}>
<punctuator                   	}>
